---
import { permalink } from '@src/utils/permalink'
import { getTags } from '@src/utils/blog'
import { SITE } from '@src/consts'

interface Props {
  count?: boolean
  limit?: number
  title?: string | false
}

const { count, limit, title = 'Tags' } = Astro.props
const tags = await getTags(limit)
---

<section>
  {title && <h2>{title}</h2>}
  <ul role="list">
    {tags.length > 0 ? tags.map(({ count, href, name }) => (
      <li role="listitem">
        <a class="tag" href={href}><i>#</i>{name}<span>{count}</span></a>
      </li>
    )) : (
      <li class="no-tags" role="listitem">No Tags</li>
    )}
  </ul>
  {count && <p><b>{tags.length}</b> tags</p>}
  {limit && <p><a href={permalink.base(SITE.ROUTES.TAGS)}>View All Tags</a></p>}
</section>

<style>
  section:not(:last-child) {
    margin-block-end: 16px;
  }

  ul {
    display: flex;
    flex-wrap: wrap;
    gap: 16px;
    justify-content: center;
    list-style: none;
    margin: 0;
    padding: 0;
  }

  .tag {
    align-items: center;
    background-color: var(--primary-dark);
    border-radius: 24px;
    color: var(--text-on-primary-dark);
    display: inline-flex;
    font-size: 1rem;
    font-weight: 800;
    padding: 6px 12px;
    text-decoration: none;
  }

  .tag > i {
    font-weight: 300;
  }

  .tag > span {
    font-weight: 600;
    margin-inline-start: 4px;
  }

  p {
    text-align: center;
  }

  p:last-child {
    margin-block-end: 0;
  }

  ul + p {
    margin-block-start: 16px;
  }
</style>
